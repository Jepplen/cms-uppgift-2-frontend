[{"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\index.js":"1","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\reportWebVitals.js":"2","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\App.js":"3","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\MainPage.js":"4","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\Home.js":"5","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\MyReviews.js":"6","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\Header.js":"7","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\LoginPage.js":"8","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\GenresNav.js":"9","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\Content.js":"10","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\Footer.js":"11","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\RegisterPage.js":"12","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\ReviewCard.js":"13","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\CreateReviewPage.js":"14","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\services\\CookieService.js":"15","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\services\\store.js":"16","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\shared\\DropDown.js":"17","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\ReviewPage.js":"18","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\shared\\utilities.js":"19","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\EditReviewPage.js":"20","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\GenrePage.js":"21","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\shared\\Accordion.js":"22","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\GamePage.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":637,"mtime":1609841547207,"results":"27","hashOfConfig":"25"},{"size":4882,"mtime":1610113603193,"results":"28","hashOfConfig":"25"},{"size":3866,"mtime":1610113731768,"results":"29","hashOfConfig":"25"},{"size":3521,"mtime":1610055911107,"results":"30","hashOfConfig":"25"},{"size":4817,"mtime":1610116693417,"results":"31","hashOfConfig":"25"},{"size":3899,"mtime":1610051204774,"results":"32","hashOfConfig":"25"},{"size":1518,"mtime":1610103044378,"results":"33","hashOfConfig":"25"},{"size":303,"mtime":1610030166534,"results":"34","hashOfConfig":"25"},{"size":431,"mtime":1608732160917,"results":"35","hashOfConfig":"25"},{"size":6305,"mtime":1610051290452,"results":"36","hashOfConfig":"25"},{"size":6354,"mtime":1609942298186,"results":"37","hashOfConfig":"25"},{"size":7006,"mtime":1610056183656,"results":"38","hashOfConfig":"25"},{"size":399,"mtime":1609753622759,"results":"39","hashOfConfig":"25"},{"size":305,"mtime":1609331450076,"results":"40","hashOfConfig":"25"},{"size":2342,"mtime":1609937073150,"results":"41","hashOfConfig":"25"},{"size":4406,"mtime":1609927878446,"results":"42","hashOfConfig":"25"},{"size":1769,"mtime":1610027051842,"results":"43","hashOfConfig":"25"},{"size":6730,"mtime":1610055875655,"results":"44","hashOfConfig":"25"},{"size":119,"mtime":1609962924525,"results":"45","hashOfConfig":"25"},{"size":3341,"mtime":1610112099725,"results":"46","hashOfConfig":"25"},{"size":6306,"mtime":1610112615895,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"caem7v",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\index.js",[],["104","105"],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\reportWebVitals.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\App.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\MainPage.js",["106"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { styled } from '@glitz/react';\r\nimport Header from \"./Header\";\r\nimport GenresNav from \"./GenresNav\";\r\nimport Content from \"./Content\";\r\nimport Home from \"../sub-components/Home\";\r\nimport MyReviews from \"../sub-components/MyReviews\";\r\nimport LoginPage from \"../sub-components/LoginPage\";\r\nimport RegisterPage from \"../sub-components/RegisterPage\";\r\nimport GenrePage from \"../sub-components/GenrePage\";\r\nimport Footer from \"./Footer\";\r\nimport CreateReviewPage from \"../sub-components/CreateReviewPage\";\r\nimport EditReviewPage from \"../sub-components/EditReviewPage\";\r\nimport ReviewPage from \"../sub-components/ReviewPage\";\r\nimport GamePage from \"../sub-components/GamePage\";\r\nimport CookieService from \"../services/CookieService\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function MainPage(props) {\r\n  const [token, setToken] = useState(CookieService.get(\"access_token\"));\r\n  const [isAuthed, setIsAuthed] = useState(!!CookieService.get(\"access_token\"));\r\n  const [userData, setUserData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    description: \"\",\r\n    userId: \"\",\r\n    profileId: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let current_cookie = document.cookie;\r\n    setInterval(() => {\r\n      if (current_cookie !== document.cookie) {\r\n        current_cookie = document.cookie\r\n        changedCookie();\r\n      }\r\n    }, 500);\r\n\r\n    console.log(isAuthed, !!userData.profileId);\r\n\r\n    if (isAuthed && !userData.profileId){\r\n      getUserData();\r\n    }\r\n  },[]);\r\n\r\n  const changedCookie = () => {\r\n    console.log(\"COOKIE HAS CHANGED\");\r\n    setToken(CookieService.get(\"access_token\"))\r\n    setIsAuthed(!!CookieService.get(\"access_token\"));\r\n  };\r\n\r\n  const updateUserData = (data) => {\r\n    console.log(data);\r\n    setUserData({\r\n      username: data.username,\r\n      email: data.email,\r\n      description: data.description,\r\n      userId: data.userId,\r\n      profileId: data.profileId,\r\n    });\r\n  };\r\n\r\n  function getUserData(){\r\n    console.log(\"NEW: \" + token);\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n\r\n    axios.get(\"/users/me\", config\r\n        ).then((response) => {\r\n            console.log(response);\r\n            getProfileData(response.data.profile);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n  }\r\n\r\n  function getProfileData(profileId){\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n\r\n    axios.get(`/profiles/${profileId}`, config\r\n    ).then((response) => {\r\n        console.log(response);\r\n\r\n        const data = {\r\n          userId: response.data.author.id,\r\n          email: response.data.author.email,\r\n          profileId: response.data.author.profile,\r\n          username: response.data.author.username,\r\n          description: response.data.profile_description,\r\n        };\r\n\r\n        updateUserData(data);\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n  }\r\n  \r\n  return (\r\n    \r\n      <Router>\r\n        <Header isAuthed={isAuthed} token={token}/>\r\n        <PrimaryContent>\r\n          <GenresNav />\r\n          <ContentBox>\r\n            <Content>\r\n              <Switch>            \r\n                <Route path=\"/\" exact render={() => (<Home isAuthed={isAuthed} token={token} />)}/>\r\n                <Route path=\"/my-reviews\" render={() => (<MyReviews isAuthed={isAuthed} userData={userData} token={token}/>)}/>\r\n                <Route path=\"/login\" render={() => (<LoginPage isAuthed={isAuthed} updateUserData={updateUserData} token={token}/>)}/>\r\n                <Route path=\"/register\" render={() => (<RegisterPage isAuthed={isAuthed} updateUserData={updateUserData} token={token}/>)}/>\r\n                <Route path=\"/genre\" render={() => (<GenrePage isAuthed={isAuthed} token={token}/>)}/>\r\n                <Route path=\"/create-review\" render={(props) => (<CreateReviewPage {...props} isAuthed={isAuthed} userData={userData} token={token}/>)}/>\r\n                <Route path=\"/edit-review\" render={(props) => (<EditReviewPage {...props} isAuthed={isAuthed} userData={userData} token={token}/>)}/>\r\n                <Route path=\"/game\" render={(props) => (<GamePage {...props} isAuthed={isAuthed} userData={userData} token={token}/>)}/>\r\n                <Route path=\"/review\" render={(props) => (<ReviewPage {...props} isAuthed={isAuthed} userData={userData} token={token}/>)}/>\r\n            </Switch>\r\n            </Content>\r\n          </ContentBox>\r\n        </PrimaryContent>\r\n        <Footer />\r\n      </Router>\r\n  );\r\n}\r\n\r\n\r\nconst PrimaryContent = styled.div({\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  width: \"100vw\",\r\n});\r\n\r\nconst ContentBox = styled.div({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  width: \"85vw\",\r\n  backgroundColor: \"blanchedalmond\"\r\n});","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\Home.js",["107","108","109","110"],"import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { styled } from '@glitz/react';\r\nimport {getStarRating, getFormatDate, shortenString, getAverageStarRating} from \"../shared/utilities\";\r\n\r\nexport default function Home(props){\r\n    const [state, setState] = useState({\r\n        reviews: [],\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/reviews\")\r\n        .then((response) => {\r\n            let all = response.data;\r\n            let latestSorted = all.sort((a, b) => (a.published_at < b.published_at) - (a.published_at > b.published_at));\r\n            let latest = latestSorted.splice(0, 5);\r\n            setState({...state, reviews: latest});\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n        });\r\n    },[]);\r\n\r\n\r\n    console.log(state.reviews);\r\n\r\n    return(\r\n        <Container>\r\n            <PageTitle>Welcome to Retro Reviews</PageTitle>\r\n            <PageHeader>Latest reviews</PageHeader>\r\n            <ReviewContainer>\r\n                {state.reviews.map(review =>\r\n                    <ReviewCard>\r\n                        <BoxArt src={review.game.box_art.url} />\r\n                        <ReviewColumn>\r\n                            <ReviewRating>{getStarRating(review.rating)}</ReviewRating>\r\n                                    <ReviewTitle>{review.title}</ReviewTitle>\r\n                                <ReviewAuthorDate>\r\n                                    <ReviewAuthor>Review by {review.owner}</ReviewAuthor>\r\n                                    <ReviewDate>Published {getFormatDate(review.published_at)}</ReviewDate>\r\n                                </ReviewAuthorDate>\r\n                            <ReviewContent>{review.review_content}</ReviewContent>\r\n                        </ReviewColumn>   \r\n                    </ReviewCard>\r\n                )}\r\n            </ReviewContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst ReviewContent = styled.p({\r\n    padding: {\r\n        xy: \"10px\",\r\n    }\r\n});\r\n\r\nconst ReviewRating = styled.div({\r\n    width: \"125px\",\r\n    marginTop: \"10px\",\r\n});\r\n\r\nconst ReviewTitle = styled.p({\r\n    fontSize: \"20px\",\r\n});\r\n\r\nconst ReviewAuthorDate = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    with: \"100%\",\r\n    padding: {\r\n        bottom: \"10px\",\r\n    },\r\n    borderBottom: \"1px solid grey\",\r\n});\r\nconst ReviewAuthor = styled.p({\r\n    width: \"30%\",\r\n});\r\n\r\nconst ReviewDate = styled.p({\r\n    width: \"30%\",\r\n});\r\n\r\n\r\n\r\nconst PageTitle = styled.p({\r\n    textAlign: \"center\",\r\n    width: \"200px\",\r\n    padding: {\r\n        x: \"15px\",\r\n        y: \"15px\",\r\n    },\r\n    animationName: {\r\n        from: {\r\n            transform: \"translate(175%, -60px)\",\r\n\r\n        },\r\n        to: {\r\n            transform: \"translate(175%, 0px)\",\r\n        },\r\n    },\r\n    animationDuration: \"1s\",\r\n    backgroundColor: \"coral\",\r\n    transform: \"translateX(175%)\",\r\n});\r\n\r\n\r\nconst BoxArt = styled.img({\r\n    height: \"150px\",\r\n    padding: {\r\n        xy: \"15px\",\r\n    },\r\n    boxSizing: \"border-box\",\r\n});\r\n\r\nconst Container = styled.div({\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    //alignItems: \"center\",\r\n});\r\n\r\nconst PageHeader = styled.p({\r\n    fonstSize: \"20px\",\r\n    margin: {\r\n        left: \"10%\",\r\n    },\r\n});\r\n\r\nconst ReviewContainer = styled.div({\r\n\r\n});\r\n\r\nconst ReviewColumn = styled.div({\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n});\r\n\r\nconst ReviewCard = styled.div({\r\n    width: \"80%\",\r\n    height: \"150px\",\r\n    display: \"flex\",\r\n    backgroundColor: \"white\",\r\n    margin: {\r\n        x: \"10%\",\r\n        y: \"20px\",\r\n    },\r\n    //boxSizing: \"border-box\",\r\n    boxSizing: \"border-box\",\r\n    //border: \"1px solid black\",\r\n    backgroundColor: \"#ffca7c\",\r\n    //filter: \"brightness(85%)\",\r\n    border: \"1px solid white\",\r\n    borderRadius: \"10px\",\r\n});","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\MyReviews.js",["111","112","113"],"import react,{useState, useEffect} from \"react\";\r\nimport ReviewCard from \"./ReviewCard\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport { styled } from '@glitz/react';\r\nimport axios from \"axios\";\r\nimport CookieService from \"../services/CookieService\";\r\n\r\n\r\nexport default function MyReviews(props){\r\n    //const [reviewIds, setReviewIds] = useState([]);\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${props.token}` }\r\n        };\r\n\r\n        console.log(props.token);\r\n        console.log(props.userData.profileId);\r\n        axios.get(`/profiles/${props.userData.profileId}`, config\r\n        ).then(response => {\r\n            console.log(\"HERE 2\")\r\n            setReviews(response.data.reviews);\r\n        }).catch(err => {\r\n            console.error(err);\r\n        });\r\n    },[]);\r\n\r\n\r\n    if (!props.isAuthed){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    if(!reviews){\r\n        return <div />\r\n    }\r\n    \r\n\r\n    return(\r\n        <Container>\r\n            <PageTitleContainer>\r\n                <PageTitle>My Reviews</PageTitle>\r\n            </PageTitleContainer>\r\n            {reviews.length > 0 ?\r\n                <ContentBox>\r\n                    {reviews.map(review => <ReviewCard review={review} token={props.token} userData={props.userData} />)}\r\n                </ContentBox>\r\n                :\r\n                <ContentBoxEmpty>\r\n                    <Blank>\r\n                        <p>You have not written any reviews yet. Start writing your first review now.</p>\r\n                        <Link to={\"/create-review\"}\r\n                    >\r\n                            <Button>Write a review</Button>\r\n                        </Link>\r\n                    </Blank>\r\n                </ContentBoxEmpty>\r\n            }\r\n        </Container> \r\n    );\r\n}\r\n\r\nconst PageTitleContainer = styled.div({\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n});\r\n\r\nconst PageTitle = styled.p({\r\n    textAlign: \"center\",\r\n    width: \"100px\",\r\n    padding: {\r\n        x: \"15px\",\r\n        y: \"15px\",\r\n    },\r\n    animationName: {\r\n        from: {\r\n            transform: \"translate(-100%, -60px)\",\r\n\r\n        },\r\n        to: {\r\n            transform: \"translate(-100%, 0px)\",\r\n        },\r\n    },\r\n    animationDuration: \"1s\",\r\n    backgroundColor: \"coral\",\r\n    transform: \"translateX(-100%)\",\r\n});\r\n\r\nconst Button = styled.button({\r\n    margin: {\r\n        top: \"50px\",\r\n    },\r\n    width: \"150px\",\r\n    height: \"50px\",\r\n    backgroundColor: \"#9100ff\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    ':hover': {\r\n        backgroundColor: \"#c981ff\",\r\n    },\r\n    ':active': {\r\n        backgroundColor: \"#450079\",\r\n    },\r\n});\r\n\r\n\r\nconst Blank = styled.div({\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: {\r\n        right: \"20%\",\r\n        top: \"150px\",\r\n    },\r\n});\r\n\r\nconst Container = styled.div({\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n});\r\n\r\nconst ContentBox = styled.div({\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    //justifyContent: \"flex-start\"\r\n});\r\n\r\nconst ContentBoxEmpty = styled.div({\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n});","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\Header.js",["114","115","116","117","118"],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\LoginPage.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\GenresNav.js",["119","120","121"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { styled } from '@glitz/react';\r\nimport axios from \"axios\";\r\nimport Accordion from \"../shared/Accordion\";\r\n\r\nexport default function GenresNav(){\r\n    const [genres, setGenres] = useState([]);\r\n    const [state, setState] = useState({\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGenres();\r\n    },[]);\r\n\r\n\r\n    function getGenres(){\r\n        axios.get(\"/genres\"\r\n        ).then((response) => {\r\n            let sortedGenres = response.data.sort((a, b) => (a.genre_name > b.genre_name) - (a.genre_name < b.genre_name));\r\n            for (let genre of sortedGenres){\r\n                genre.games.sort((a, b) => (a.title > b.title) - (a.title < b.title));\r\n            }\r\n\r\n            console.log(sortedGenres);\r\n            setGenres(sortedGenres);\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <GenresBox>\r\n            <HeaderText>Genres</HeaderText>\r\n            <Accordion genres={genres} />\r\n        </GenresBox>\r\n    );\r\n}\r\n\r\nconst GenresBox = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    padding: {y: \"20px\" },\r\n    width: \"15vw\",\r\n    minHeight: \"80vh\",\r\n    fontSize: \"16px\",\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: \"lightgrey\",\r\n});\r\n\r\nconst HeaderText = styled.p({\r\n    padding: {y: \"20px\"},\r\n    boxSizing: \"border-box\",\r\n    fontSize: \"20px\",\r\n});","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\Content.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\main-components\\Footer.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\RegisterPage.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\ReviewCard.js",["122","123","124"],"import React, { useEffect, useState } from \"react\";\r\nimport { styled } from '@glitz/react';\r\nimport axios from \"axios\";\r\nimport {getStarRating, getFormatDate, shortenString} from \"../shared/utilities\";\r\nimport {Redirect, Link} from \"react-router-dom\";\r\n\r\nexport default function ReviewCard(props){\r\n    console.log(props);\r\n    console.log(props.review);\r\n    const [content, setContent] = useState({\r\n        author: props.userData.username,\r\n        gameName: props.review.game_name,\r\n        gameId: props.review.game,\r\n        reviewId: props.review.id,\r\n        profileId: props.review.profile,\r\n        rating: props.review.rating,\r\n        userId: props.review.author,\r\n        reviewContent: props.review.review_content,\r\n        reviewHeader: props.review.title,\r\n        publishDate: props.review.published_at,\r\n        lastUpdateDate: props.review.updated_at,\r\n        boxArtUrl: \"\",\r\n        genre: \"\",\r\n        gameDescription: \"\",\r\n    });\r\n    \r\n\r\n    useEffect(() => {\r\n        getBoxArt();\r\n    },[]);\r\n\r\n    function getBoxArt(){\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${props.token}` }\r\n        };\r\n\r\n        axios.get(`/games/${props.review.game}`, config\r\n        ).then(response => {\r\n            console.log(\"HERE 2\")\r\n            console.log(response);\r\n            setContent({\r\n                ...content,\r\n                boxArtUrl: response.data.box_art.url,\r\n                genre: response.data.genre.genre_name,\r\n                gameDescription: response.data.description,\r\n            });\r\n            //setReviews(response.data.reviews);\r\n        }).catch(err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    function handleDelete(){\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${props.token}` }\r\n        };\r\n\r\n        axios.delete(`/reviews/${content.reviewId}`, config\r\n        ).then(response => {\r\n            console.log(response);\r\n        }).catch(err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Card>\r\n            <HeaderContainer>\r\n                <GameName>{content.gameName}</GameName>\r\n            </HeaderContainer>\r\n            <SecondaryContainer>\r\n                <Image src={content.boxArtUrl} />\r\n                <TextContainer>\r\n                    <StarRating>{getStarRating(content.rating)}</StarRating>               \r\n                    <ReviewHeader>{shortenString(content.reviewHeader, 20)}</ReviewHeader>\r\n                    <Date>{getFormatDate(content.publishDate)}</Date>\r\n                        <ButtonContainer>\r\n                            <Link to={{            \r\n                                    pathname: \"/review\",\r\n                                    state: { content: content }\r\n                                }}\r\n                                style={{width: \"30%\"}}\r\n                            >\r\n                                <ViewButton>View</ViewButton>\r\n                            </Link>    \r\n                            <Link                         \r\n                                to={{\r\n                                pathname: \"/edit-review\",\r\n                                state: { content: content }\r\n                                }}\r\n                                style={{width: \"30%\"}}\r\n                            >\r\n                                <EditButton>Edit</EditButton>\r\n                            </Link>                       \r\n                            <DeleteButton onClick={handleDelete}>Delete</DeleteButton>\r\n                        </ButtonContainer>\r\n                </TextContainer>\r\n            </SecondaryContainer>\r\n        </Card>\r\n        \r\n    );\r\n}\r\n\r\nconst ReviewHeader = styled.p({\r\n    color: \"black\",\r\n});\r\n\r\nconst StarRating = styled.div({\r\n    color: \"black\",\r\n});\r\n\r\nconst GameName = styled.p({\r\n    fontSize: \"18px\",\r\n    color: \"black\",\r\n});\r\n\r\nconst Date = styled.p({\r\n    fontStyle: \"italic\",\r\n    fontSize: \"13px\",\r\n    color: \"black\",\r\n});\r\n\r\nconst SecondaryContainer = styled.div({\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n});\r\n\r\nconst HeaderContainer = styled.div({\r\n    width: \"100%\",\r\n    margin: {\r\n        bottom: \"7px\",\r\n    },\r\n});\r\n\r\nconst ButtonContainer = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n}); \r\n\r\nconst ViewButton = styled.button({\r\n    margin: {\r\n        top: \"10px\",\r\n    },\r\n    width: \"100%\",\r\n    height: \"25px\",\r\n    backgroundColor: \"#9100ff\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    ':hover': {\r\n        backgroundColor: \"#c981ff\",\r\n    },\r\n    ':active': {\r\n        backgroundColor: \"#450079\",\r\n    },\r\n});\r\n\r\nconst EditButton = styled.button({\r\n    margin: {\r\n        top: \"10px\",\r\n    },\r\n    width: \"100%\",\r\n    height: \"25px\",\r\n    backgroundColor: \"#9100ff\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    ':hover': {\r\n        backgroundColor: \"#c981ff\",\r\n    },\r\n    ':active': {\r\n        backgroundColor: \"#450079\",\r\n    },\r\n});\r\n\r\nconst DeleteButton = styled.button({\r\n    margin: {\r\n        top: \"10px\",\r\n    },\r\n    width: \"30%\",\r\n    height: \"25px\",\r\n    backgroundColor: \"#e70006\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    ':hover': {\r\n        backgroundColor: \"#ff686c\",\r\n    },\r\n    ':active': {\r\n        backgroundColor: \"#8b0003\",\r\n    },\r\n});\r\n\r\nconst Card = styled.div({\r\n    width: \"300px\",\r\n    height: \"160px\",\r\n    backgroundColor: \"dodgerblue\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"column\",\r\n    margin: {\r\n        xy: \"20px\",\r\n    },\r\n    padding: {\r\n        xy: \"10px\"\r\n    },\r\n    boxSizing: \"border-box\",\r\n    transition: \"all 0.3s\",\r\n    ':hover': {\r\n        boxShadow: \"0px 14px 23px -5px rgba(0,0,0,0.7)\",\r\n    },\r\n});\r\n\r\nconst TextContainer = styled.div({\r\n    width: \"75%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"dodgerblue\",\r\n});\r\n\r\nconst ImageContainer = styled.div({\r\n    width: \"30%\",\r\n\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    backgroundColor: \"grey\",\r\n});\r\n\r\nconst Image = styled.img({\r\n    height: \"100px\",\r\n    padding: {\r\n        top: \"0px\",\r\n        right: \"15px\",\r\n    },\r\n    \r\n});","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\CreateReviewPage.js",["125","126"],"import React, {useState, useEffect} from \"react\";\r\nimport { styled } from '@glitz/react';\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CookieService from \"../services/CookieService\";\r\nimport DropDown from \"../shared/DropDown\";\r\n\r\nexport default function CreateReviewPage(props){\r\n    console.log(props);\r\n    const [games, setGames] = useState([]);\r\n    const [content,] = useState(props.location.statet ? props.location.state.content : \"\");\r\n    //const [dropDownValue, setDropDownValue] = useState(\"\");\r\n    const [state, setState] = useState({\r\n        name: props.location.state ? props.location.state.content.title : \"\",\r\n        header: \"\",\r\n        content: \"\",\r\n        rating: \"\",\r\n        game: props.location.state ? props.location.state.content : \"\",\r\n        author: \"Tjohej\",\r\n        owner: \"\",\r\n      });\r\n\r\n    useEffect(() => {\r\n        if (props.isAuthed){\r\n            GetGames();\r\n        }\r\n    },[]);\r\n\r\n    function handleChange (e) {\r\n        let value = e.target.value;\r\n\r\n        if(e.target.name === \"rating\"){\r\n            const reg = /^\\d+$/;\r\n            value = parseInt(value);\r\n\r\n            if(!reg.test(value)){\r\n                value = \"\";\r\n                console.log(\"DSAD\");\r\n            } else {\r\n                if (value > 5){\r\n                    value = 5;\r\n                }\r\n            }\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: value\r\n        });\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        createReview();\r\n        setState({username: \"\", email: \"\", password: \"\"});\r\n    }\r\n\r\n\r\n    function createReview(){\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${CookieService.get(\"access_token\")}` }\r\n        };\r\n\r\n        const bodyParameters = {\r\n            game_name: state.game.title,\r\n            rating: parseInt(state.rating),\r\n            title: state.header,\r\n            review_content: state.content,\r\n            owner: props.userData.username,\r\n            game: JSON.stringify(state.game.id),\r\n            profile: JSON.stringify(props.userData.profileId),\r\n        };\r\n\r\n        axios.post(\"/reviews\", bodyParameters, config\r\n        ).then((response) => {\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    function GetGames(){\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${CookieService.get(\"access_token\")}` }\r\n        };\r\n        \r\n        axios.get(\"/games\", config\r\n        ).then((response) => {\r\n            setGames(response.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    function handleDropDownValueChange(game){\r\n        console.log(game);\r\n        setState({game: game});\r\n        \r\n    }\r\n\r\n    return(\r\n        \r\n        <ContentBox>\r\n            <PageTitle>Write a review</PageTitle>\r\n            {props.isAuthed ? \r\n                <InnerBox>\r\n                    <ImageBox>\r\n                        {state.game && <Img src={state.game.box_art.url}/>}\r\n                    </ImageBox>                    \r\n                    <FormBox onSubmit={handleSubmit}> \r\n                        <DropDown\r\n                            header={\"Choose a game\"}\r\n                            category={\"Game\"}\r\n                            data={games}\r\n                            updateValue={handleDropDownValueChange}\r\n                            currentGame={!!content.id && content.id}\r\n                        />\r\n                        <label htmlFor={\"rating\"}>Rate the game (0-5)</label>    \r\n                        <InputField                         \r\n                            style={{width: \"20px\"}} \r\n                            maxLength={1}\r\n                            id={\"rating\"}\r\n                            type=\"text\"\r\n                            name={\"rating\"}\r\n                            value={state.rating}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label htmlFor={\"header\"}>Header</label>    \r\n                        <InputField\r\n                            id={\"header\"}\r\n                            type=\"text\"\r\n                            name={\"header\"}\r\n                            value={state.header}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label htmlFor={\"content\"}>Content</label>    \r\n                        <InputTextArea\r\n                            id={\"content\"}\r\n                            type=\"textarea\"\r\n                            name={\"content\"}\r\n                            value={state.content}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <SubmitButton type=\"submit\">Publish review</SubmitButton>\r\n                    </FormBox> \r\n                </InnerBox>\r\n            :\r\n                <AltText>\r\n                    You need to <Link to=\"login\">Login</Link> or <Link to=\"register\">register</Link> an account before writing reviews.\r\n                </AltText>\r\n}\r\n        </ContentBox>\r\n    );\r\n}\r\n\r\nconst PageTitle = styled.p({\r\n    padding: {\r\n        x: \"15px\",\r\n        y: \"15px\",\r\n    },\r\n\r\n    animationName: {\r\n        from: {\r\n            transform: \"translate(-100%, -60px)\",\r\n\r\n        },\r\n        to: {\r\n            transform: \"translate(-100%, 0px)\",\r\n        },\r\n    },\r\n    animationDuration: \"1s\",\r\n    backgroundColor: \"coral\",\r\n    transform: \"translateX(-100%)\",\r\n});\r\n\r\nconst AltText = styled.p({\r\n    margin: {\r\n        top: \"150px\",\r\n        right: \"20%\",\r\n    },\r\n});\r\n\r\nconst Header = styled.p({\r\n    fontSize: \"25px\",\r\n    margin: {\r\n        top: \"20px\",\r\n        right: \"20%\",\r\n    },\r\n});\r\n\r\nconst Img = styled.img({\r\n    width: \"25vh\",\r\n});\r\n\r\nconst ContentBox = styled.div({\r\n    width: \"85vw\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n});\r\n\r\nconst InnerBox = styled.div({\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n});\r\n\r\nconst ImageBox = styled.div({\r\n    width: \"15%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin:{\r\n        right: \"30px\",\r\n    }\r\n    //flexDirection: \"column\",\r\n});\r\n\r\nconst FormBox = styled.form({\r\n    width: \"60%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    padding: {\r\n        left: \"2%\",\r\n    }\r\n});\r\n\r\nconst SubmitButton = styled.button({\r\n    alignSelf: \"stretch\",\r\n    height: \"30px\",\r\n});\r\n\r\nconst InputField = styled.input({\r\n    alignSelf: \"stretch\",\r\n})\r\n\r\nconst InputTextArea = styled.textarea({\r\n    alignSelf: \"stretch\",\r\n    height: \"200px\",\r\n    textAlign: \"left\",\r\n})","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\services\\CookieService.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\services\\store.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\shared\\DropDown.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\ReviewPage.js",["127","128"],"import React, { useEffect, useState } from \"react\";\r\nimport { styled } from '@glitz/react';\r\nimport axios from \"axios\";\r\nimport {getStarRating, getFormatDate} from \"../shared/utilities\";\r\n//import { id } from \"date-fns/locale\";\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport default function ReviewCard(props){\r\n    const [content,] = useState(props.location.state.content);\r\n    console.log(content)\r\n\r\n    return(\r\n        <Container>\r\n            <PrimaryContainer>\r\n                <HeaderContainer>\r\n                    <HeaderText>\r\n                        {content.reviewHeader}    \r\n                    </HeaderText>\r\n                </HeaderContainer>\r\n                <DetailsContainer>\r\n                    <Author>\r\n                        Review by {content.author}\r\n                    </Author>\r\n                    <Date>\r\n                        Published {getFormatDate(content.publishDate)}\r\n                    </Date>                    \r\n                </DetailsContainer>\r\n                <ReviewContent>\r\n                    {content.reviewContent}\r\n                </ReviewContent>\r\n            </PrimaryContainer>\r\n            <SecondaryContainer>\r\n                <RatingContainer>\r\n                    {getStarRating(content.rating)}\r\n                </RatingContainer>\r\n                <ImageContainer>\r\n                    <GameName>\r\n                        {content.gameName}\r\n                    </GameName>\r\n                    <Img src={content.boxArtUrl} />\r\n                </ImageContainer>\r\n            </SecondaryContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nconst Container = styled.div({\r\n    width: \"90%\",\r\n    backgroundColor: \"dodgerblue\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    margin: {\r\n        xy: \"20px\",\r\n    },\r\n    padding: {\r\n        xy: \"10px\"\r\n    },\r\n});\r\n\r\nconst PrimaryContainer = styled.div({\r\n    width: \"75%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    padding: {\r\n        xy: \"10px\"\r\n    },\r\n    backgroundColor: \"chocolate\",\r\n});\r\n\r\nconst SecondaryContainer = styled.div({\r\n    width: \"13rem\",\r\n\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    padding: {\r\n        xy: \"10px\"\r\n    },\r\n    backgroundColor: \"beige\",\r\n});\r\n\r\nconst GameName = styled.p({\r\n    padding: {\r\n        xy: \"6px\",\r\n        top: \"10px\",\r\n        bottom: \"15px\",\r\n    },\r\n    boxSizing: \"border-box\",\r\n});\r\n\r\nconst RatingContainer = styled.div({\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    padding: {xy: \"5px\"},\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: \"green\",\r\n});\r\n\r\nconst ImageContainer = styled.div({\r\n    width: \"100%\",\r\n    height: \"80%\",\r\n    backgroundColor: \"blue\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    border: \"black solid 1px\",\r\n    boxSizing: \"border-box\",\r\n\r\n    // padding: {\r\n    //     xy: \"10px\"\r\n    // },\r\n    // boxSizing: \"border-box\",\r\n});\r\n\r\nconst Img = styled.img({\r\n    height: \"12rem\",\r\n    padding: {\r\n        bottom: \"1.5rem\",\r\n    }\r\n});\r\n\r\nconst HeaderContainer = styled.div({\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: {\r\n        bottom: \"3px\",\r\n    },\r\n    borderBottom: \"black solid 1px\",\r\n    boxSizing: \"border-box\",\r\n});\r\n\r\nconst HeaderText = styled.p({\r\n    fontSize: \"20px\",\r\n    padding: {\r\n        left: \"10px\",\r\n    },\r\n    boxSizing: \"border-box\",\r\n});\r\n\r\nconst DetailsContainer = styled.div({\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: {\r\n        bottom: \"3px\",\r\n    },\r\n    boxSizing: \"border-box\",\r\n});\r\n\r\nconst Author = styled.p({\r\n    fontSize: \"14px\",\r\n    fontStyle: \"italic\",\r\n    padding: {\r\n        left: \"10px\",\r\n        top: \"7px\",\r\n        bottom: \"3px\",\r\n    },\r\n});\r\n\r\nconst Date = styled.p({\r\n    fontSize: \"14px\",\r\n    fontStyle: \"italic\",\r\n    padding: {\r\n        right: \"10px\",\r\n        top: \"7px\",\r\n        bottom: \"3px\",\r\n    },\r\n});\r\n\r\nconst ReviewContent = styled.p({\r\n    width: \"100%\",\r\n    fontSize: \"16px\",\r\n    padding: {\r\n        top: \"10px\",\r\n        bottom: \"20px\",\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\shared\\utilities.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\EditReviewPage.js",["129","130"],"import React, {useState, useEffect} from \"react\";\r\nimport { styled } from '@glitz/react';\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CookieService from \"../services/CookieService\";\r\nimport DropDown from \"../shared/DropDown\";\r\n\r\nexport default function EditReviewPage(props){\r\n    const [content, setContent] = useState(props.location.state.content);\r\n    console.log(props);\r\n    const [games, setGames] = useState([]);\r\n    //const [game, setGame] = useState({});\r\n    //const [dropDownValue, setDropDownValue] = useState(\"\");\r\n    const [state, setState] = useState({\r\n        gameId: content.gameId,\r\n        name: content.gameName,\r\n        header: content.reviewHeader,\r\n        content: content.reviewContent,\r\n        rating: content.rating,\r\n        author: content.author,\r\n        boxArtUrl: content.boxArtUrl,\r\n        game: \"\",\r\n      });\r\n\r\n    useEffect(() => {\r\n        if (props.isAuthed){\r\n            GetGames();\r\n        }\r\n    },[]);\r\n\r\n    function handleChange (e) {\r\n        let value = e.target.value;\r\n\r\n        if(e.target.name === \"rating\"){\r\n            const reg = /^\\d+$/;\r\n            value = parseInt(value);\r\n\r\n            if(!reg.test(value)){\r\n                value = \"\";\r\n                console.log(\"DSAD\");\r\n            } else {\r\n                if (value > 5){\r\n                    value = 5;\r\n                }\r\n            }\r\n        }\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: value\r\n        });\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        createReview();\r\n        setState({username: \"\", email: \"\", password: \"\"});\r\n    }\r\n\r\n\r\n    function createReview(){\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${CookieService.get(\"access_token\")}` }\r\n        };\r\n\r\n        const bodyParameters = {\r\n            game_name: state.game.title,\r\n            rating: parseInt(state.rating),\r\n            title: state.header,\r\n            review_content: state.content,\r\n            game: JSON.stringify(state.game.id),\r\n            profile: JSON.stringify(props.userData.profileId),\r\n        };\r\n\r\n        axios.put(`/reviews/${content.reviewId}`, bodyParameters, config\r\n        ).then((response) => {\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    function GetGames(){\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${CookieService.get(\"access_token\")}` }\r\n        };\r\n        \r\n        axios.get(\"/games\", config\r\n        ).then((response) => {\r\n            setGames(response.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    function handleDropDownValueChange(game){\r\n        console.log(game);\r\n        setState({...state, game: game});\r\n        \r\n    }\r\n\r\n    return(\r\n        \r\n        <ContentBox>\r\n            <PageTitle>Edit review</PageTitle>\r\n            {props.isAuthed ? \r\n                <InnerBox>\r\n                    <ImageBox>\r\n                        {state.game ? <Img src={state.game.box_art.url}/> : <Img src={state.boxArtUrl}/>}\r\n                    </ImageBox>                    \r\n                    <FormBox onSubmit={handleSubmit}> \r\n                        <DropDown\r\n                            header={\"Choose a game\"}\r\n                            category={\"Game\"}\r\n                            data={games}\r\n                            updateValue={handleDropDownValueChange}\r\n                            currentGame={content.gameId}\r\n                        />\r\n                        <label htmlFor={\"rating\"}>Rate the game</label>    \r\n                        <InputField\r\n                            style={{width: \"22px\"}} \r\n                            maxLength={1}\r\n                            id={\"rating\"}\r\n                            type=\"text\"\r\n                            name={\"rating\"}\r\n                            value={state.rating}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label htmlFor={\"header\"}>Header</label>    \r\n                        <InputField\r\n                            id={\"header\"}\r\n                            type=\"text\"\r\n                            name={\"header\"}\r\n                            value={state.header}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label htmlFor={\"content\"}>Content</label>    \r\n                        <InputTextArea\r\n                            id={\"content\"}\r\n                            type=\"textarea\"\r\n                            name={\"content\"}\r\n                            value={state.content}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <SubmitButton type=\"submit\">Update review</SubmitButton>\r\n                    </FormBox> \r\n                </InnerBox>\r\n            :\r\n                <h3>\r\n                    You need to <Link to=\"login\">Login</Link> or <Link to=\"register\">register</Link> an account before writing reviews.\r\n                </h3>\r\n}\r\n        </ContentBox>\r\n    );\r\n}\r\n\r\nconst PageTitle = styled.p({\r\n    padding: {\r\n        x: \"15px\",\r\n        y: \"15px\",\r\n    },\r\n    animationName: {\r\n        from: {\r\n            transform: \"translate(-100%, -60px)\",\r\n\r\n        },\r\n        to: {\r\n            transform: \"translate(-100%, 0px)\",\r\n        },\r\n    },\r\n    animationDuration: \"1s\",\r\n    backgroundColor: \"coral\",\r\n    transform: \"translateX(-100%)\",\r\n});\r\n\r\nconst Img = styled.img({\r\n    width: \"25vh\",\r\n});\r\n\r\nconst ContentBox = styled.div({\r\n    width: \"85vw\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n});\r\n\r\nconst InnerBox = styled.div({\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n});\r\n\r\nconst ImageBox = styled.div({\r\n    width: \"15%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin:{\r\n        right: \"30px\",\r\n    }\r\n});\r\n\r\nconst FormBox = styled.form({\r\n    width: \"60%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    padding: {\r\n        left: \"2%\",\r\n    }\r\n});\r\n\r\nconst SubmitButton = styled.button({\r\n    alignSelf: \"stretch\",\r\n    height: \"30px\",\r\n});\r\n\r\nconst InputField = styled.input({\r\n    alignSelf: \"stretch\",\r\n})\r\n\r\nconst InputTextArea = styled.textarea({\r\n    alignSelf: \"stretch\",\r\n    height: \"200px\",\r\n    textAlign: \"left\",\r\n})","C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\GenrePage.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\shared\\Accordion.js",[],"C:\\Users\\jeppe\\Documents\\EC\\Föreläsningar_och_övningar\\CMS\\uppgift2\\cms-uppgift-2\\src\\sub-components\\GamePage.js",["131","132","133"],"import React, {useState, useEffect} from \"react\";\r\nimport {styled} from \"@glitz/react\";\r\nimport axios from \"axios\";\r\nimport {getStarRating, getFormatDate, shortenString, getAverageStarRating} from \"../shared/utilities\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function GamePage(props){\r\n    const [rating, setRating] = useState(null);\r\n    console.log(props);\r\n    const [game, setGame] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getGame();\r\n    },[props.location.state.game.id]);\r\n\r\n    function getGame(){\r\n        axios.get(`/games/${props.location.state.game.id}`\r\n        ).then((response) => {\r\n            console.log(response.data);\r\n            setGame(response.data);\r\n            setRating(getAverageStarRating(response.data.reviews));\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    if (!game || !rating){\r\n        return <div />;\r\n    }\r\n\r\n\r\n    return(\r\n        <Container>\r\n            <GameContainer>\r\n                <GameTitle>{game.title}</GameTitle>\r\n                {!!game.reviews.length && \r\n                    <RatingContainer>\r\n                        <RatingAveraged>{rating.rating}</RatingAveraged>\r\n                        <RatingAveragedText>{game.reviews.length} review{game.reviews.length > 1 ? \"s\" : \"\"} (average score {rating.average})</RatingAveragedText>\r\n                    </RatingContainer>\r\n                }\r\n                <BoxArtImg src={game.box_art.url}/>\r\n                <GameDescription>{game.description}</GameDescription>\r\n            </GameContainer>\r\n            <ReviewContainer>\r\n                {!!game.reviews.length ?\r\n                        game.reviews.map(review => \r\n                            <ReviewCard key={review.id + review.title}>\r\n                                    <ReviewRating>{getStarRating(review.rating)}</ReviewRating>\r\n                                    <ReviewTitle>{review.title}</ReviewTitle>\r\n                                <ReviewAuthorDate>\r\n                                    <ReviewAuthor>Review by {review.owner}</ReviewAuthor>\r\n                                    <ReviewDate>Published {getFormatDate(review.published_at)}</ReviewDate>\r\n                                </ReviewAuthorDate>\r\n                                <ReviewContent>{review.review_content}</ReviewContent>                 \r\n                            </ReviewCard>)\r\n                    :\r\n                        <NoReviewCard>\r\n                            <NoReview>\r\n                                This game has no reviews, be the first to write one. \r\n                            </NoReview>\r\n                            <Link to={{\r\n                                pathname: \"/create-review\",\r\n                                state: { content: game }\r\n                                }}\r\n                            >\r\n                                <NewReviewButton>Write a review</NewReviewButton>\r\n                            </Link>\r\n                        </NoReviewCard> \r\n                }\r\n                   \r\n            </ReviewContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst NewReviewButton = styled.button({\r\n    margin: {\r\n        top: \"10px\",\r\n    },\r\n    width: \"150px\",\r\n    height: \"50px\",\r\n    backgroundColor: \"#9100ff\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    ':hover': {\r\n        backgroundColor: \"#c981ff\",\r\n    },\r\n    ':active': {\r\n        backgroundColor: \"#450079\",\r\n    },\r\n});\r\n\r\nconst Container = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: {\r\n        top: \"50px\"\r\n    }\r\n    \r\n});\r\n\r\nconst GameContainer = styled.div({\r\n    width: \"30%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    //border: \"1px solid black\",\r\n    boxSizing:\"border-box\",\r\n    padding: {\r\n        x: \"10px\",\r\n        y: \"15px\",\r\n        top: \"10px\",\r\n        bottom: \"10px\",\r\n    },\r\n    margin: {\r\n        left: \"40px\",\r\n        bottom: \"40px\",\r\n    },\r\n});\r\n\r\nconst GameTitle = styled.p({\r\n    fontSize: \"20px\",\r\n    margin: {\r\n        bottom: \"15px\",\r\n    },\r\n\r\n});\r\n\r\nconst GameDescription = styled.p({\r\n    fontSize: \"14px\",\r\n\r\n});\r\n\r\nconst BoxArtImg = styled.img({\r\n    height: \"200px\",\r\n    margin: {\r\n        bottom: \"25px\",\r\n    },\r\n});\r\n\r\nconst ReviewContainer = styled.div({\r\n    width: \"60%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    boxSizing:\"border-box\",\r\n    margin: {\r\n        right: \"40px\",\r\n        bottom: \"40px\",\r\n    },\r\n});\r\n\r\nconst ReviewCard = styled.div({\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    padding: {\r\n        x: \"10px\",\r\n        y: \"10px\",\r\n    },\r\n    margin: {\r\n        bottom: \"10px\",\r\n    },\r\n    boxSizing: \"border-box\",\r\n    //border: \"1px solid black\",\r\n    backgroundColor: \"#e8aa61\",\r\n    //filter: \"brightness(85%)\",\r\n    border: \"1px solid white\",\r\n    borderRadius: \"10px\",\r\n});\r\n\r\nconst ReviewTitle = styled.p({\r\n    fontSize: \"20px\",\r\n});\r\n\r\nconst ReviewAuthorDate = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    with: \"100%\",\r\n    padding: {\r\n        bottom: \"10px\",\r\n    },\r\n    borderBottom: \"1px solid grey\",\r\n});\r\nconst ReviewAuthor = styled.p({\r\n    width: \"30%\",\r\n});\r\n\r\nconst ReviewDate = styled.p({\r\n    width: \"30%\",\r\n});\r\n\r\nconst ReviewTitleRating = styled.div({\r\n    display: \"flex\",\r\n    with: \"100%\",\r\n});\r\n\r\nconst ReviewRating = styled.div({\r\n    width: \"125px\",\r\n});\r\n\r\nconst ReviewContent = styled.p({\r\n    padding: {\r\n        xy: \"10px\",\r\n    }\r\n});\r\n\r\nconst RatingAveraged = styled.div({\r\n    display: \"flex\",\r\n\r\n});\r\n\r\nconst RatingAveragedText = styled.p({\r\n    margin: {\r\n        top: \"1px\",\r\n        bottom: \"15px\",\r\n    },\r\n});\r\n\r\nconst RatingContainer = styled.div({\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n});\r\n\r\nconst NoReviewCard = styled.div({\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    padding: {\r\n        x: \"10px\",\r\n        y: \"10px\",\r\n    },\r\n    margin: {\r\n        bottom: \"10px\",\r\n    },\r\n    boxSizing: \"border-box\",\r\n    border: \"1px solid black\",\r\n});\r\n\r\nconst NoReview = styled.p({\r\n\r\n});",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":46,"column":5,"nodeType":"140","endLine":46,"endColumn":7,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":4,"column":39,"nodeType":"144","messageId":"145","endLine":4,"endColumn":52},{"ruleId":"142","severity":1,"message":"146","line":4,"column":54,"nodeType":"144","messageId":"145","endLine":4,"endColumn":74},{"ruleId":"138","severity":1,"message":"147","line":23,"column":7,"nodeType":"140","endLine":23,"endColumn":9,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":152,"column":5,"nodeType":"151","messageId":"152","endLine":152,"endColumn":20},{"ruleId":"142","severity":1,"message":"153","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"154","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":21},{"ruleId":"138","severity":1,"message":"155","line":29,"column":7,"nodeType":"140","endLine":29,"endColumn":9,"suggestions":"156"},{"ruleId":"142","severity":1,"message":"157","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":16},{"ruleId":"149","severity":1,"message":"158","line":90,"column":5,"nodeType":"151","messageId":"152","endLine":90,"endColumn":11},{"ruleId":"149","severity":1,"message":"158","line":116,"column":5,"nodeType":"151","messageId":"152","endLine":116,"endColumn":11},{"ruleId":"149","severity":1,"message":"158","line":139,"column":5,"nodeType":"151","messageId":"152","endLine":139,"endColumn":11},{"ruleId":"142","severity":1,"message":"159","line":196,"column":7,"nodeType":"144","messageId":"145","endLine":196,"endColumn":18},{"ruleId":"142","severity":1,"message":"160","line":2,"column":9,"nodeType":"144","messageId":"145","endLine":2,"endColumn":13},{"ruleId":"142","severity":1,"message":"161","line":9,"column":12,"nodeType":"144","messageId":"145","endLine":9,"endColumn":17},{"ruleId":"142","severity":1,"message":"162","line":9,"column":19,"nodeType":"144","messageId":"145","endLine":9,"endColumn":27},{"ruleId":"142","severity":1,"message":"163","line":5,"column":9,"nodeType":"144","messageId":"145","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"164","line":30,"column":7,"nodeType":"140","endLine":30,"endColumn":9,"suggestions":"165"},{"ruleId":"142","severity":1,"message":"166","line":225,"column":7,"nodeType":"144","messageId":"145","endLine":225,"endColumn":21},{"ruleId":"138","severity":1,"message":"167","line":27,"column":7,"nodeType":"140","endLine":27,"endColumn":9,"suggestions":"168"},{"ruleId":"142","severity":1,"message":"169","line":183,"column":7,"nodeType":"144","messageId":"145","endLine":183,"endColumn":13},{"ruleId":"142","severity":1,"message":"170","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"171","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":13},{"ruleId":"142","severity":1,"message":"172","line":9,"column":21,"nodeType":"144","messageId":"145","endLine":9,"endColumn":31},{"ruleId":"138","severity":1,"message":"167","line":29,"column":7,"nodeType":"140","endLine":29,"endColumn":9,"suggestions":"173"},{"ruleId":"142","severity":1,"message":"143","line":4,"column":39,"nodeType":"144","messageId":"145","endLine":4,"endColumn":52},{"ruleId":"138","severity":1,"message":"174","line":14,"column":7,"nodeType":"140","endLine":14,"endColumn":37,"suggestions":"175"},{"ruleId":"142","severity":1,"message":"176","line":198,"column":7,"nodeType":"144","messageId":"145","endLine":198,"endColumn":24},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUserData', 'isAuthed', and 'userData.profileId'. Either include them or remove the dependency array.","ArrayExpression",["179"],"no-unused-vars","'shortenString' is defined but never used.","Identifier","unusedVar","'getAverageStarRating' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["180"],"no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","'react' is defined but never used.","'CookieService' is defined but never used.","React Hook useEffect has missing dependencies: 'props.token' and 'props.userData.profileId'. Either include them or remove the dependency array.",["181"],"'IconLogo' is defined but never used.","Duplicate key 'margin'.","'LoginButton' is assigned a value but never used.","'Link' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'getBoxArt'. Either include it or remove the dependency array.",["182"],"'ImageContainer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.isAuthed'. Either include it or remove the dependency array.",["183"],"'Header' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'setContent' is assigned a value but never used.",["184"],"React Hook useEffect has a missing dependency: 'getGame'. Either include it or remove the dependency array.",["185"],"'ReviewTitleRating' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"194","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [getUserData, isAuthed, userData.profileId]",{"range":"199","text":"200"},"Update the dependencies array to be: [state]",{"range":"201","text":"202"},"Update the dependencies array to be: [props.token, props.userData.profileId]",{"range":"203","text":"204"},"Update the dependencies array to be: [getBoxArt]",{"range":"205","text":"206"},"Update the dependencies array to be: [props.isAuthed]",{"range":"207","text":"208"},{"range":"209","text":"208"},"Update the dependencies array to be: [getGame, props.location.state.game.id]",{"range":"210","text":"211"},[1606,1608],"[getUserData, isAuthed, userData.profileId]",[782,784],"[state]",[891,893],"[props.token, props.userData.profileId]",[1014,1016],"[getBoxArt]",[950,952],"[props.isAuthed]",[982,984],[475,505],"[getGame, props.location.state.game.id]"]